(window.webpackJsonp=window.webpackJsonp||[]).push([[4],{nbT8:function(e,t,n){"use strict";n.r(t),n.d(t,"_frontmatter",(function(){return c})),n.d(t,"default",(function(){return l}));var a=n("Fcif"),r=n("+I+c"),o=(n("mXGw"),n("/FXl")),i=n("TjRS"),c=(n("aD51"),{});void 0!==c&&c&&c===Object(c)&&Object.isExtensible(c)&&!c.hasOwnProperty("__filemeta")&&Object.defineProperty(c,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"readme.md"}});var s={_frontmatter:c},p=i.a;function l(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(o.b)(p,Object(a.a)({},s,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)("h1",{id:"ol-kit"},"ol-kit"),Object(o.b)("blockquote",null,Object(o.b)("p",{parentName:"blockquote"},"A React wrapper around modern OpenLayers.")),Object(o.b)("p",null,Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"https://www.npmjs.com/package/ol-kit"}),Object(o.b)("img",{alt:"NPM",src:"https://img.shields.io/npm/v/ol-kit.svg"}))," ",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"https://standardjs.com"}),Object(o.b)("img",{alt:"JavaScript Style Guide",src:"https://img.shields.io/badge/code_style-standard-brightgreen.svg"}))),Object(o.b)("h2",{id:"install"},"Install"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"yarn add ol-kit\n")),Object(o.b)("h2",{id:"getting-started"},"Getting Started"),Object(o.b)("p",null,"Let's create a simple map!"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-jsx"}),'// Importing the library\nimport { Map } from "ol-kit";\nimport "ol-kit/dist/index.css";\n\n// Import required OpenLayers types\nimport { XYZ as XYZSource } from "ol/source";\n\n// Viewport options, according to https://openlayers.org/en/latest/apidoc/module-ol_View.html#~ViewOptions\nconst options = {\n  projection: "EPSG:4326",\n  center: [-43.990062, -19.873536],\n  zoom: 6,\n  minZoom: 5,\n  maxZoom: 16\n};\n\n// Let\'s create a source for our basemap, in this case, Esri\'s World Imagery\nconst esriWorldImagerySource = new XYZSource({\n  url:\n    "https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}"\n});\n\n// Defining the map:\nfunction App() {\n  return (\n    <Map height={"700px"} width={"100%"}>\n      <Map.View options={options}></Map.View>\n\n      {/* Add a layer using your recently created source */}\n      <Map.Layer.Tile source={esriWorldImagerySource}></Map.Layer.Tile>\n    </Map>\n  );\n}\n\nexport default App;\n')),Object(o.b)("p",null,"And... ",Object(o.b)("em",{parentName:"p"},"voilà"),", your map is up and running!"),Object(o.b)("h2",{id:"license"},"License"),Object(o.b)("p",null,"GNU GPL v3 © ",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"https://github.com/teofilosalgado"}),"teofilosalgado")))}void 0!==l&&l&&l===Object(l)&&Object.isExtensible(l)&&!l.hasOwnProperty("__filemeta")&&Object.defineProperty(l,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"readme.md"}}),l.isMDXComponent=!0}}]);
//# sourceMappingURL=component---readme-md-d0853c376873f1fbbd24.js.map